version: "3.8"

volumes:
  astro_node_modules:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - programming-api
      - programming-ui
      - sse-server
    ports:
      - "7800:7800"

  programming-api:
    build:
      context: programming-api
      dockerfile: Dockerfile.prod
    image: programming-api-prod
    restart: "on-failure"
    expose:
      - 7777
    depends_on:
      - database
      - flyway
      - redis
    env_file:
      - project.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  sse-server:
    build:
      context: sse-server
      dockerfile: Dockerfile.prod
    image: sse-server-prod
    restart: "on-failure"
    expose:
      - 4000
    env_file:
      - project.env
    depends_on:
      - redis
      - database

  programming-ui:
    build:
      context: programming-ui
      dockerfile: Dockerfile.prod
    image: programming-ui-prod
    restart: "on-failure"
    ports:
      - "3000:80"
    depends_on:
      - programming-api
      - sse-server
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  grader-api:
    build:
      context: grader-api
      dockerfile: Dockerfile.prod
    image: grader-api-prod
    restart: "on-failure"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    expose:
      - 7000
    depends_on:
      - redis
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  database:
    container_name: database-server-dab-p1-99f97847-4398-4a1b-b2e5-d211a33c1e01
    image: postgres:14.1
    restart: "unless-stopped"
    env_file:
      - project.env

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  e2e-playwright:
    entrypoint: "/bin/true"
    build: e2e-playwright
    image: e2e-playwright
    network_mode: host
    depends_on:
      - nginx
    volumes:
      - ./e2e-playwright/tests:/e2e-playwright/tests
  
  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379